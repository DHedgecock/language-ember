'scopeName': 'internal.text.inline.htmlbars'
'fileTypes': []
'patterns': [
  { 'include': '#html-tag' }
  { 'include': '#html-comment-block' }
  { 'include': '#entities' }
]
'repository':
  'tag-stuff':
    'patterns': [
      { 'include': '#tag-id-attribute' }
      { 'include': '#tag-generic-attribute' }
      { 'include': 'source.htmlbars.js' }
      { 'include': '#string-double-quoted' }
      { 'include': '#string-single-quoted' }
      { 'include': '#unquoted-attribute' }
    ]
  'html-comment-block':
    'comment': 'match on any html comment block eg: <!-- -->'
    'begin': '<!--'
    'captures':
      '0':
        'name': 'punctuation.definition.comment.html.htmlbars'
    'end': '--\\s*>'
    'name': 'comment.block.html.htmlbars'
    'patterns': [
      {
        'match': '--'
        'name': 'invalid.illegal.bad-comments-or-CDATA.html.htmlbars'
      }
    ]
  'html-tag':
    'comment': 'match any html tag, handle as separate matches on open/close tags'
    'begin': '(<\\/?)(([a-zA-Z0-9:-]+))\\b'
    'beginCaptures':
      '1':
        'name': 'punctuation.definition.tag.html.htmlbars'
      '2':
        'name': 'entity.name.tag.html.htmlbars'
    'end': '(\\/?)(>)'
    'endCaptures':
      '1':
        'name': 'punctuation.definition.tag.html.htmlbars'
      '2':
        'name': 'punctuation.definition.tag.html.htmlbars'
    'name': 'meta.tag.html.element.htmlbars'
    'patterns': [
      { 'include': 'source.htmlbars.js'}
      { 'include': '#tag-stuff' }
    ]
  'tag-generic-attribute':
    'comment': 'eg: data-test="radical"'
    'match': '(?<=[^=])\\b([a-zA-Z0-9:-]+)'
    'name': 'entity.other.attribute-name.html.htmlbars'
  'tag-id-attribute':
    'comment': 'eg: id="radical"'
    'begin': '\\b(id)\\b\\s*(=)'
    'captures':
      '1':
        'name': 'entity.other.attribute-name.id.html.htmlbars'
      '2':
        'name': 'punctuation.separator.key-value.html.htmlbars'
    'end': '(?<=\'|")|(?=\\s|>)'
    'name': 'meta.attribute-with-value.id.html.htmlbars'
    'patterns': [
      { 'include': '#string-double-quoted' }
      { 'include': '#string-single-quoted' }
      { 'include': '#unquoted-attribute' }
    ]
  'entities':
    'comment': 'Eg: &amp;'
    'patterns': [
      {
        'captures':
          '1':
            'name': 'punctuation.definition.entity.html.htmlbars'
          '3':
            'name': 'punctuation.definition.entity.html.htmlbars'
        'match': '(&)([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+)(;)'
        'name': 'constant.character.entity.html.htmlbars'
      }
      {
        'match': '&'
        'name': 'invalid.illegal.bad-ampersand.html.htmlbars'
      }
    ]
  'string-double-quoted':
    'begin': '"'
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.html.htmlbars'
    'end': '"'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.html.htmlbars'
    'name': 'string.quoted.double.html.htmlbars'
    'patterns': [
      { 'include': 'source.htmlbars.js'}
      { 'include': '#entities' }
    ]
  'string-single-quoted':
    'begin': '\''
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.html.htmlbars'
    'end': '\''
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.html.htmlbars'
    'name': 'string.quoted.single.html.htmlbars'
    'patterns': [
      { 'include': 'source.htmlbars.js'}
      { 'include': '#entities' }
    ]
  'unquoted-attribute':
    'comment': 'Eg: checked=true'
    'match': '(?<==)(?:[^\\s<>/\'"]|/(?!>))+'
    'name': 'string.unquoted.html.htmlbars'
